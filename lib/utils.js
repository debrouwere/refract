// Generated by CoffeeScript 1.8.0
(function() {
  var applyToKeys, evaluate, string, _;

  _ = require('underscore');

  exports.evaluate = evaluate = (require('coffee-script'))["eval"];

  exports.string = string = function(value) {
    return '"' + value + '"';
  };

  exports.interpolate = function(value, options) {
    return evaluate(string(value), options);
  };

  exports.applyToKeys = applyToKeys = function(obj, fn) {
    var applyFunctionToKeys;
    applyFunctionToKeys = _.partial(applyToKeys, _, fn);
    switch (obj.constructor) {
      case Object:
        return _.object(_.map(obj, function(value, key) {
          return [fn(key), applyFunctionToKeys(value)];
        }));
      case Array:
        return _.map(obj, applyFunctionToKeys);
      default:
        return obj;
    }
  };

  exports.kv = function(key, value) {
    var obj;
    obj = {};
    obj[key] = value;
    return obj;
  };

  exports.splat = function(fn) {
    return function() {
      return fn.apply(null, arguments[0]);
    };
  };

  exports.guard = function(fn) {
    return function() {
      return fn(arguments[0]);
    };
  };

}).call(this);
