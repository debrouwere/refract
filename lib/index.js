// Generated by CoffeeScript 1.8.0
(function() {
  var evaluate, requote, string, _;

  evaluate = (require('coffee-script'))["eval"];

  _ = require('underscore');

  _.str = require('underscore.string');

  string = function(value) {
    return '"' + value + '"';
  };

  requote = function(value) {
    if (value.match(/^'.*'$/)) {
      return string(value.slice(1, -1));
    } else {
      return value;
    }
  };

  module.exports = function(template, context) {
    var err, refract, value;
    refract = _.partial(module.exports, _, context);
    switch (template.constructor) {
      case Object:
        return _.object(_.map(template, function(value, key) {
          return [key, refract(value)];
        }));
      case Array:
        return _.map(template, refract);
      default:
        value = requote(template);
        try {
          return evaluate(value, {
            sandbox: context
          });
        } catch (_error) {
          err = _error;
          return evaluate(string(value), {
            sandbox: context
          });
        }
    }
  };

  module.exports.builtinHelpers = _.extend({}, _, _.str);

}).call(this);
